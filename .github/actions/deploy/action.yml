name: Reusable deployment workflow
description: Reusable action that makes a build and uploads it

inputs:
  buildType:
    description: debug / release
    required: true
  brand:
    description: RBTV / STV
    required: true

runs:
  using: "composite"
  steps:
    - name: Extract version name
      id: extract_version_name
      shell: bash
      run: |
        branch=${{ github.ref }}
        echo "VERSION=$(echo "${branch#"${branch%%[0-9]*}"}")" >> $GITHUB_ENV
    
        - uses: actions/checkout@v3
        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'temurin'
            cache: gradle

        - name: Grant execute permission for gradlew
          shell: bash
          run: chmod +x gradlew

        - name: Build APK
          shell: bash
          run: bash ./gradlew ${{ env.MODULE }}:${{ env.ACTION }}${{ env.BRAND }}${{ inputs.store }}${{ env.BUILD_TYPE }} --no-build-cache
          env:
            GITHUB_TOKEN: ${{ inputs.rbak_token }}

    - name: Make builds
      shell: bash
      run: |
        buildType=${{ inputs.buildType }}
        echo "BUILD_TYPE=$(echo "${buildType^}")" >> $GITHUB_ENV
        ./gradlew assemble${buildType^}
        ./gradlew android:bundle${buildType^}

    - name: Rename files (GooglePlay)
      shell: bash
      run: |
        pathPrefix=android/build/outputs/
        buildType=${{ inputs.buildType }}
        oldName=android-${{ inputs.buildType }}
        newName=${{ inputs.brand }}-Android-GooglePlay-${{ env.VERSION }}-${{ env.BUILD_TYPE }}
        
        ## rename apk
        oldFilePath=${pathPrefix}apk/${buildType}/${oldName}.apk
        newFilePath=${pathPrefix}apk/${buildType}/${newName}.apk
        mv ${oldFilePath} ${newFilePath}.apk
        
        ## rename bundle
        oldFilePath=${pathPrefix}bundle/${buildType}/${oldName}.aab
        newFilePath=${pathPrefix}bundle/${buildType}/${newName}.aab
        mv ${oldFilePath} ${newFilePath}.aab

    - name: Rename files (Amazon)
      shell: bash
      run: |
        pathPrefix=amazon/build/outputs/
        buildType=${{ inputs.buildType }}
        oldName=amazon-${{ inputs.buildType }}
        newName=${{ inputs.brand }}-Android-Amazon-${{ env.VERSION }}-${{ env.BUILD_TYPE }}
        
        ## rename apk
        oldFilePath=${pathPrefix}apk/${buildType}/${oldName}.apk
        newFilePath=${pathPrefix}apk/${buildType}/${newName}.apk
        mv ${oldFilePath} ${newFilePath}.apk

#    - name: Rename APK
#      shell: bash
#      run: |
#        echo ${{ env.FILE_PATH }}${{ env.BUILD_NAME }}.${{ env.FILE_EXT }}
#        file=$(find ${{ env.FILE_PATH }} -type f -name "*.${{ env.FILE_EXT }}")
#        mv ${file[0]} ${{ env.FILE_PATH }}${{ env.BUILD_NAME }}.${{ env.FILE_EXT }}

    #    - name: Build Package for AWS Upload
    #      shell: bash
    #      run: |
    #        mkdir s3bundle
    #        cp -R ${{ env.FILE_PATH }}${{ env.BUILD_NAME }}.${{ env.FILE_EXT }} s3bundle
    #
    #    - name: Configure AWS Credentials
    #      uses: aws-actions/configure-aws-credentials@v1
    #      with:
    #        aws-access-key-id: ${{ inputs.aws_key }}
    #        aws-secret-access-key: ${{ inputs.aws_secret }}
    #        aws-region: us-west-2

    - name: Upload files to S3 with AWS CLI
      shell: bash
      run: |
        echo Builds/${{ inputs.brand }}/Android/Shared/${{ env.VERSION }}/${{ env.BUILD_TYPE }}
#        aws s3 sync s3bundle/ s3://rb-streaming-app-builds/Builds/${{ inputs.brand }}/Android/${{ inputs.platform }}/${{ env.VERSION }}/${{ env.BUILD_TYPE }}
