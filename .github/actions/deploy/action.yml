name: Reusable deployment workflow
description: Reusable action that makes a build and uploads it

inputs:
  buildType:
    description: debug / release
    required: true
  store:
    description: GooglePlay / Amazon
    required: true
  brand:
    description: rbtv / servus
    required: true
  platform:
    description: mobile / 10ft
    required: true
  format:
    description: apk / bundle
    required: true
  token:
    description: token
    required: true


runs:
  using: "composite"
  steps:
    - name: Extract version name old
      shell: bash
      run: |
        echo "VERSION_OLD=$(echo "${{ github.ref }}" | grep -Eoiw "([^\/]+$)" | paste -sd "_" -)" >> $GITHUB_ENV
        echo "version $VERSION_OLD"

    - name: Extract version name
      shell: bash
      run: |
        branch=${{ github.ref }}
        echo "VERSION=$(echo "${branch#"${branch%%[0-9]*}"}")" >> $GITHUB_ENV

    - name: Prepare string variables
      shell: bash
      run: |
        if [[ "${{ inputs.platform }}" == "Mobile" ]]; then
            echo "MODULE=app" >> $GITHUB_ENV; else
            echo "MODULE=tv" >> $GITHUB_ENV
        fi
        buildType=${{ inputs.buildType }}
        if [[ "${{ inputs.format }}" == "apk" ]]; then
            echo "ACTION=assemble" >> $GITHUB_ENV
            echo "FILE_EXT=apk" >> $GITHUB_ENV
            echo "PATH_FOLDER=$(echo "${brand,,}${{ inputs.store }}/$buildType")" >> $GITHUB_ENV;
        else
            echo "ACTION=bundle" >> $GITHUB_ENV
            echo "FILE_EXT=aab" >> $GITHUB_ENV
            echo "PATH_FOLDER=$(echo "${brand,,}${{ inputs.store }}${buildType^}")" >> $GITHUB_ENV
        fi
        if [[ ${{ inputs.brand }} == "RBTV" ]]; then
            echo "BRAND=Rbtv" >> $GITHUB_ENV; else
            echo "BRAND=Servus" >> $GITHUB_ENV
        fi
        echo "BUILD_TYPE=$(echo "${buildType^}")" >> $GITHUB_ENV
        brand=${{ inputs.brand }}
        echo "PATH_FOLDER=$(echo "${brand,,}${{ inputs.store }}")" >> $GITHUB_ENV

    - name: Extract build name
      shell: bash
      run: echo "BUILD_NAME=${{ inputs.brand }}-Android-${{ inputs.platform }}-${{ inputs.store }}-${{ env.VERSION }}-${{ inputs.buildType }}" >> $GITHUB_ENV

    - name: Print build action
      shell: bash
      run: |
        echo PRINT ACTION: ${{ env.MODULE }}:${{ env.ACTION }}${{ env.BRAND }}${{ inputs.store }}${{ env.BUILD_TYPE }}
        echo PRINT MODULE: ${{ env.MODULE }} - ${{ env.MODULE_1 }}

    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      shell: bash
      run: chmod +x gradlew

    - name: Build APK
      shell: bash
      run: bash ./gradlew app:"${{ env.ACTION }}${{ inputs.buildType }}" --stacktrace
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
#
    - name: Print file tree
      shell: bash
      run: |
        echo ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.BUILD_NAME }}
        path: app/*/*.*
        ##path: app/build/outputs/${{ inputs.format }}/${{ inputs.buildType }}/*.*
        ##path: ${{ env.MODULE }}/build/outputs/${{ inputs.format }}/${{ inputs.buildType }}/*.*

    - name: Upload files to S3 with AWS CLI
      shell: bash
      run: |
        echo //rb-streaming-app-builds/Builds/${{ inputs.brand }}/Android/${{ env.VERSION }}/${{ env.BUILD_TYPE }}
