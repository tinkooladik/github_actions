name: 'Auto Assign'
on:
  pull_request:
    types: [ opened, ready_for_review, converted_to_draft, closed, reopened ]

jobs:
  assign-reviewers:
    runs-on: ubuntu-latest
    steps:
      - uses: kentaro-m/auto-assign-action@v2.0.0

  add-needs-review-label:
    runs-on: ubuntu-latest
    steps:
      - name: Add appropriate label based on PR status
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const isDraft = context.payload.pull_request.draft;
            const isClosed = context.payload.pull_request.state === 'closed';
            const labelsResponse = await github.rest.issues.listLabelsOnIssue({
              owner,
              repo,
              issue_number: prNumber
            })
            const labels = labelsResponse.data.map(label => label.name);
            
            const hasLabel = (labelName) => labels.includes(label);
            
            async function removeLabelsIfExist(labelsToRemove) {
              for (const label of labelsToRemove) {
                if (hasLabel(label)) {
                  await github.rest.issues.removeLabel({
                    owner,
                    repo,
                    issue_number: prNumber,
                    name: label
                  });
                  console.log(`Removed '${label}' label from PR #${prNumber}`);
                }
              }
            }
            
            async function addLabelsIfNotExist(labelsToAdd) {
              const labelsToActuallyAdd = labelsToAdd.filter(label => !hasLabel(label));
              if (labelsToActuallyAdd.length > 0) {
                await github.rest.issues.addLabels({
                  owner,
                  repo,
                  issue_number: prNumber,
                  labels: labelsToActuallyAdd
                });
                console.log(`Added labels to PR #${prNumber}: ${labelsToActuallyAdd.join(', ')}`);
              }
            }
            
            if (isClosed) {
              await addLabelsIfNotExist(['wontfix']);
              await removeLabelsIfExist(['wip', 'needs review', 'approved']);
            } else if (isDraft) {
              await addLabelsIfNotExist(['wip']);
              await removeLabelsIfExist(['needs review', 'wontfix', 'approved']);
            } else {
              if (!hasLabel('approved')) {
                await addLabelsIfNotExist(['needs review']);
              } else {
                console.log(`Skipped adding 'needs review' label because 'approved' label is present on PR #${prNumber}`);
              }
              await removeLabelsIfExist(['wip', 'wontfix']);
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ## test draft (3)
