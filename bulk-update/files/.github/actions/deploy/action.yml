name: Reusable deployment action
description: Reusable action that makes android and amazon builds and uploads them to AWS

inputs:
  head_branch:
    description: "The head branch of the pull request."
    required: false  # Can be optional if used with non-PR events
  build_type:
    description: debug / release (or custom)
    required: true
  brand:
    description: RBTV / STV
    required: true

runs:
  using: "composite"
  steps:
    - name: Extract version name
      id: extract_version_name
      shell: bash
      run: |
        branch=${{ inputs.head_branch }}
        echo "VERSION=$(echo "${branch#"${branch%%[0-9]*}"}")" >> $GITHUB_ENV

    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      shell: bash
      run: chmod +x gradlew

    - name: Make builds and prepare folder for artifacts
      shell: bash
      run: |
        buildType=${{ inputs.build_type }}
        ./gradlew assemble${buildType^}
        ./gradlew android:bundle${buildType^}
        mkdir ./artifacts

    - name: Rename files and move to artifacts folder (GooglePlay)
      shell: bash
      run: |
        pathPrefix=./android/build/outputs/
        buildType=${{ inputs.build_type }}
        oldName=android-${buildType}
        newName=${{ inputs.brand }}-Android-GooglePlay-${{ env.VERSION }}-${buildType^}
        
        ## apk
        filePath=${pathPrefix}apk/${buildType}/
        oldFilePath=$(find ${filePath} -type f -name "*.apk")
        newFilePath=./artifacts/${newName}.apk
        mv ${oldFilePath[0]} ${newFilePath}
        
        ## bundle
        filePath=${pathPrefix}bundle/${buildType}/
        oldFilePath=$(find ${filePath} -type f -name "*.aab")
        newFilePath=./artifacts/${newName}.aab
        mv ${oldFilePath[0]} ${newFilePath}

    - name: Rename files and move to artifacts folder (Amazon)
      shell: bash
      run: |
        pathPrefix=./amazon/build/outputs/
        buildType=${{ inputs.build_type }}
        oldName=amazon-${buildType}
        newName=${{ inputs.brand }}-Android-Amazon-${{ env.VERSION }}-${buildType^}
        
        ## apk
        filePath=${pathPrefix}apk/${buildType}/
        oldFilePath=$(find ${filePath} -type f -name "*.apk")
        newFilePath=./artifacts/${newName}.apk
        mv ${oldFilePath[0]} ${newFilePath}

    - name: Install tree
      shell: bash
      run: sudo apt-get update && sudo apt-get install tree

    - name: Print file tree
      shell: bash
      run: |
        echo "Printing Android project file tree:"
        tree -L 6


    - name: Upload multiple files to S3 with AWS CLI
      shell: bash
      run: |
        buildType=${{ inputs.build_type }}
        echo Builds-Refresh/${{ inputs.brand }}/Android/Shared/${{ env.VERSION }}/${buildType^}
